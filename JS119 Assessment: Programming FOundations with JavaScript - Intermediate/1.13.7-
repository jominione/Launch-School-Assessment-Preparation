// What is the return value of map in the following code? Why?

let result = ['ant', 'bear'].map(elem => {
  if (elem.length > 3) {
    return elem;
  }
});

console.log(result);

// Solution: The output is `[undefined, 'bear']`.

// On lines 3 a global variable `result` is declared and initialised 
// with the return value of array `['ant', 'bear']` calling the array method 
// `map`.

// The `map` method creates a new array by applying the callback function 
// to each element of the array.

// On lines 3 to 6, a callback function is declared as an arrow function with 
// elem as the parameter.

// Each value of the caller array is passed as an argument to the `elem` parameter.

// For each element of the array the if statement checks if elem.length > 3.
// If the condition is `true`, the function returns `elem`.
// If the condition is `false`, the function implicitly returns `undefined`.

// Each value of the caller is evaluated `map` resulting in the array `[undefined, 'bear']`.

// On line 9 `console.log` is invoked with the value of `result` passed as
// argument outputting `[undefined, 'bear']`.