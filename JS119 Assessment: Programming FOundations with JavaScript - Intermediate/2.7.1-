// In the following code, what are the final length values for array1, array2,
// array3, array4, and array5?

let array1 = [1, 2, undefined, 4];

let array2 = [1];
array2.length = 5;

let array3 = [];
array3[-1] = [1];

let array4 = [1, 2, 3, 4, 5];
array4.length = 3;

let array5 = [];
array5[100] = 3;

// Solution:

// Final length of `array1` is 4. The length is the highest index position 
// that has a value, plus 1. In this case, the highest index position that 
// has a value is 3; add 1 to that, and we get the length value of 4.

// Final length of `array2` is 5. Initially `array2` has length 1 but by setting
// the property `length` to 5 expanded the size of the array.

// You can think of the resulting array as having 5 elements of which the 
// last 4 have a value of undefined. In actuality, the array still has only 
// one element, but has 4 gaps at the end -- the gaps aren't real elements 
// and take up very little memory. 

// Final length of `array3` is 0 because only values with non-negative index
// are counted in length.

// Final length of `array4` is 3 because by setting the property `length` to 3
// length of `array4` is truncated to 3.

// Final length of `array5` is 101 because the `length` property always returns
// number that is one greater than the greatest used index position which is
// 100 here.